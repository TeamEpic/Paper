From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Hazerd <dransom96@gmail.com>
Date: Fri, 26 Jun 2020 21:02:03 -0400
Subject: [PATCH] Monumenta - Mobs that despawn return to their spawners


diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index e0ab058bf947ea10b37eadf6122292e708bd3809..27f5238fe1fbc037a1de7bf8b6b1b3cc6fb52df0 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -112,9 +112,9 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
     public double lastX;
     public double lastY;
     public double lastZ;
-    private double locX;
-    private double locY;
-    private double locZ;
+    public double locX; // Monumenta (public)
+    public double locY; // Monumenta (public)
+    public double locZ; // Monumenta (public)
     private Vec3D mot;
     public float yaw;
     public float pitch;
@@ -196,6 +196,7 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
     public long activatedTick = Integer.MIN_VALUE;
     public boolean isTemporarilyActive = false; // Paper
     public boolean spawnedViaMobSpawner; // Paper - Yes this name is similar to above, upstream took the better one
+    public MobSpawnerAbstract spawnerSpawnedBy = null; // Monumenta
     public boolean fromNetherPortal; // Paper
     protected int numCollisions = 0; // Paper
     public void inactiveTick() { }
@@ -364,6 +365,27 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
         return this.id;
     }
 
+    // Monumenta START
+    public void despawn() {
+        if (this instanceof EntityLiving && this.spawnerSpawnedBy != null && ((EntityLiving)this).getHealth() >= 1 && this.locY > 0) {
+            // Get the closest player to the spawner
+            EntityHuman entityhuman = this.world.a(this.spawnerSpawnedBy.b().getX(), this.spawnerSpawnedBy.b().getY(), this.spawnerSpawnedBy.b().getZ(), -1, false);
+            if (entityhuman != null) {
+                // Figure out how far that player is from the spawner
+                double dX = (entityhuman.locX - this.spawnerSpawnedBy.b().getX());
+                double dY = (entityhuman.locY - this.spawnerSpawnedBy.b().getY());
+                double dZ = (entityhuman.locZ - this.spawnerSpawnedBy.b().getZ());
+                double nearestPlayerDistanceSquared = dX * dX + dY * dY + dZ * dZ;
+                if (nearestPlayerDistanceSquared >= 576) { // 24 * 24
+                    // No players are next to the spawner the mob came from - reprime it
+                    this.spawnerSpawnedBy.spawnDelay = 0;
+                }
+            }
+        }
+        die();
+    }
+    // Monumenta END
+
     public void die() {
         this.dead = true;
     }
diff --git a/src/main/java/net/minecraft/server/EntityInsentient.java b/src/main/java/net/minecraft/server/EntityInsentient.java
index 5aca7a9131787415fb2edba1ebec9601e8a56d3a..4d5d523ca63918701f115e2c09b752c8b7a4dc15 100644
--- a/src/main/java/net/minecraft/server/EntityInsentient.java
+++ b/src/main/java/net/minecraft/server/EntityInsentient.java
@@ -639,7 +639,7 @@ public abstract class EntityInsentient extends EntityLiving {
     @Override
     public void checkDespawn() {
         if (this.world.getDifficulty() == EnumDifficulty.PEACEFUL && this.J()) {
-            this.die();
+            this.despawn(); // Monumenta
         } else if (!this.isPersistent() && !this.I()) {
             EntityHuman entityhuman = this.world.findNearbyPlayer(this, -1.0D);
 
@@ -647,11 +647,11 @@ public abstract class EntityInsentient extends EntityLiving {
                 double d0 = entityhuman.h(this);
 
                 if (d0 > world.paperConfig.hardDespawnDistance) { // CraftBukkit - remove isTypeNotPersistent() check // Paper - custom despawn distances
-                    this.die();
+                    this.despawn(); // Monumenta
                 }
 
                 if (this.ticksFarFromPlayer > 600 && this.random.nextInt(800) == 0 && d0 > world.paperConfig.softDespawnDistance) { // CraftBukkit - remove isTypeNotPersistent() check // Paper - custom despawn distances
-                    this.die();
+                    this.despawn(); // Monumenta
                 } else if (d0 < 1024.0D) {
                     this.ticksFarFromPlayer = 0;
                 }
diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index 39072ebdc9e4be2bb762d81a8bd542dbdb8f6371..5dc1752c4a45cf74b418078557cac102116f1c43 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -708,6 +708,12 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         this.extinguish();
         this.setFlag(0, false);
         this.getCombatTracker().g();
+
+        // Monumenta START - don't allow mobs to reprime spawners when they are near players that die.
+        for (org.bukkit.entity.Entity nearby : this.world.getWorld().getNearbyEntities(new Location(this.world.getWorld(), this.locX, this.locY, this.locZ), 24.0d, 24.0d, 24.0d)) {
+            ((org.bukkit.craftbukkit.entity.CraftEntity)nearby).getHandle().spawnerSpawnedBy = null;
+        }
+        // Monumenta END
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/MobSpawnerAbstract.java b/src/main/java/net/minecraft/server/MobSpawnerAbstract.java
index df494d37be687860878c2709ae7996510118a559..f3bf42c70fcf3db4b00287aaab691b50c4acee71 100644
--- a/src/main/java/net/minecraft/server/MobSpawnerAbstract.java
+++ b/src/main/java/net/minecraft/server/MobSpawnerAbstract.java
@@ -163,6 +163,9 @@ public abstract class MobSpawnerAbstract {
                             // Spigot End
                         }
                         entity.spawnedViaMobSpawner = true; // Paper
+                        if (!(entity instanceof EntityFlying || entity instanceof EntityVex)) {
+                            entity.spawnerSpawnedBy = this; // Monumenta
+                        }
                         // Spigot Start
                         flag = true; // Paper
                         if (org.bukkit.craftbukkit.event.CraftEventFactory.callSpawnerSpawnEvent(entity, blockposition).isCancelled()) {

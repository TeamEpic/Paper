From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Byron Marohn <combustible@live.com>
Date: Wed, 1 Apr 2020 14:07:13 -0700
Subject: [PATCH] Monumenta - Add events for loading and saving advancement
 data

Signed-off-by: Byron Marohn <combustible@live.com>

diff --git a/src/main/java/com/destroystokyo/paper/event/player/PlayerAdvancementDataLoadEvent.java b/src/main/java/com/destroystokyo/paper/event/player/PlayerAdvancementDataLoadEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..f3ec306ba8d663f376724f5860cc9b685109166b
--- /dev/null
+++ b/src/main/java/com/destroystokyo/paper/event/player/PlayerAdvancementDataLoadEvent.java
@@ -0,0 +1,83 @@
+package com.destroystokyo.paper.event.player;
+
+import java.io.File;
+
+import org.bukkit.entity.Player;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.player.PlayerEvent;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+/**
+ * Called when the server loads the advancement data for a player
+ */
+public class PlayerAdvancementDataLoadEvent extends PlayerEvent {
+    private static final HandlerList handlers = new HandlerList();
+    @Nullable private String jsonData;
+    @NotNull private File path;
+
+    public PlayerAdvancementDataLoadEvent(@NotNull Player who, @NotNull File path) {
+        super(who);
+        this.jsonData = null;
+        this.path = path;
+    }
+
+    /**
+     * Get the file path where advancement data will be loaded from.
+     *
+     * Data will only be loaded from here if the data is not directly set by {@link #setJsonData}
+     *
+     * @return advancement data File to load from
+     */
+    @NotNull
+    public File getPath() {
+        return path;
+    }
+
+    /**
+     * Set the file path where advancement data will be loaded from.
+     *
+     * Data will only be loaded from here if the data is not directly set by {@link #setJsonData}
+     *
+     * @param path advancement data File to load from
+     */
+    public void setPath(@NotNull File path) {
+        this.path = path;
+    }
+
+    /**
+     * Get the JSON data supplied by an earlier call to {@link #setJsonData}.
+     *
+     * This data will be used instead of loading the player's advancement file. It is null unless
+     * supplied by a plugin.
+     *
+     * @return JSON data of the player's advancements as set by {@link #setJsonData}
+     */
+    @Nullable
+    public String getJsonData() {
+        return jsonData;
+    }
+
+    /**
+     * Set the JSON data to use for the player's advancements instead of loading it from a file.
+     *
+     * This data will be used instead of loading the player's advancement file. It is null unless
+     * supplied by a plugin.
+     *
+     * @param jsonData advancement data JSON string to load. If null, load from file
+     */
+    public void setJsonData(@Nullable String jsonData) {
+        this.jsonData = jsonData;
+    }
+
+    @NotNull
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
diff --git a/src/main/java/com/destroystokyo/paper/event/player/PlayerAdvancementDataSaveEvent.java b/src/main/java/com/destroystokyo/paper/event/player/PlayerAdvancementDataSaveEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..c2322470206e960c9ff12f723d8b568966426c84
--- /dev/null
+++ b/src/main/java/com/destroystokyo/paper/event/player/PlayerAdvancementDataSaveEvent.java
@@ -0,0 +1,82 @@
+package com.destroystokyo.paper.event.player;
+
+import java.io.File;
+
+import org.bukkit.entity.Player;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.player.PlayerEvent;
+import org.jetbrains.annotations.NotNull;
+
+/**
+ * Called when the server saves the advancement data for a player
+ */
+public class PlayerAdvancementDataSaveEvent extends PlayerEvent implements Cancellable {
+    private static final HandlerList handlers = new HandlerList();
+    @NotNull private String jsonData;
+    @NotNull private File path;
+    private boolean cancel = false;
+
+    public PlayerAdvancementDataSaveEvent(@NotNull Player who, @NotNull File path, @NotNull String jsonData) {
+        super(who);
+        this.jsonData = jsonData;
+        this.path = path;
+    }
+
+    /**
+     * Get the file path where advancement data will be saved to.
+     *
+     * @return advancement data File to save to
+     */
+    @NotNull
+    public File getPath() {
+        return path;
+    }
+
+    /**
+     * Set the file path where advancement data will be saved to.
+     *
+     * @return advancement data File to save to
+     */
+    public void setPath(@NotNull File path) {
+        this.path = path;
+    }
+
+    /**
+     * Get the JSON advancements data that will be saved.
+     *
+     * @return JSON data of the player's advancements
+     */
+    @NotNull
+    public String getJsonData() {
+        return jsonData;
+    }
+
+    /**
+     * Set the JSON advancements data that will be saved.
+     *
+     * @param jsonData advancement data JSON string to save instead
+     */
+    public void setJsonData(@NotNull String jsonData) {
+        this.jsonData = jsonData;
+    }
+
+    public boolean isCancelled() {
+        return cancel;
+    }
+
+    public void setCancelled(boolean cancel) {
+        this.cancel = cancel;
+    }
+
+    @NotNull
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
